<core:FragmentDefinition height="100%"
    xmlns:layout="sap.ui.layout"
    xmlns:form="sap.ui.layout.form"
    xmlns:core="sap.ui.core"
    xmlns="sap.m">
	<Table id="idWorksHoA" inset="false" mode="None" items="{WrkASHOA}">
        <headerToolbar>
            <Toolbar>
                <content>
                    <Title text="{i18n>detail.ops.panel.content.table.hoaddo.title}({detailView>/DDOTableRowCount})" level="H2"/>
                    <ToolbarSpacer/>
                    <Button icon="sap-icon://add" tooltip="{i18n>tooltip.addToTable}" type="Transparent" press="addNewRowDDOs" visible="{= ${detailView>/bEditable} &amp;&amp; (${detailView>/SubmitBtnVisibility} === 'X' ? true: false)}"/>
                </content>
            </Toolbar>
        </headerToolbar>
        <columns>
            <Column visible="false">
                <Text text="{i18n>detail.ops.panel.content.table.column.text.DDO}" />
            </Column>
            <Column width="2.7rem">
                <Text text="{i18n>detail.ops.panel.content.table.column.text.ItemNo}" />
            </Column>
            <Column width="9rem">
                <Text text="{i18n>detail.ops.panel.content.table.column.text.HeadOfAccount}" />
            </Column>
            <Column width="6rem">
                <Text text="{i18n>detail.ops.panel.content.table.column.text.DDO}" />
            </Column>
            <Column width="3rem">
                <Text text="{i18n>detail.ops.panel.content.table.column.text.Share}" />
            </Column>
            <Column width="3rem" visible="false">
                <Text text="{i18n>detail.ops.panel.content.table.column.text.RefNum}" />
            </Column>
            <Column width="6rem">
                <Text text="{i18n>detail.ops.panel.content.table.column.text.validFrom}" />
            </Column>
            <Column width="6rem">
                <Text text="{i18n>detail.ops.panel.content.table.column.text.validTo}" />
            </Column>	
            <Column width="1.6rem" visible="{= ${detailView>/bEditable} &amp;&amp; (${detailView>/SubmitBtnVisibility} === 'X' ? true: false)}">
                <Text text="{i18n>detail.ops.panel.content.table.column.text.delete}"/>
            </Column>											
        </columns>
        <items>
            <ColumnListItem id="idHoaListItem">
                <cells>
                    <Text text="{HoaGuid}" visible="false"/>
                    <Input value="{ItemNo}" tooltip="{ItemNo}" editable="false" textAlign="Right"/>
                    <Input change="onDdoChange" 
                        app:bindPath="Hoa"
                        selectedKey="{Hoa}"
                        required="{= ${oControlModel>/Hoa/mandatory}}"
                        showSuggestion="true"
                        showValueHelp="true"
                        suggest="handleSuggest"
                        valueHelpRequest="handleValueHelp"
                        editable="{= ${oControlModel>/Hoa/display} &amp;&amp; ${detailView>/bEditable} &amp;&amp; (${detailView>/SubmitBtnVisibility} === 'X' ? true: false)}"
                        valueState="{oControlModel>/Hoa/valueState}" 
                        valueStateText="{oControlModel>/Hoa/valueStateText}" 
                        maxLength="{oControlModel>/Hoa/maxLength}" 
                        type="{oControlModel>/Hoa/type}"
                        suggestionItems="{path: '/ZWRK_C_HOA', events: {dataReceived: '.onSuggestDataReceived'}}"
                        tooltip="{Hoa}"
                        id="Hoa">
                        <customData>
                            <core:CustomData key="key" value="Hoa"/>
                            <core:CustomData key="text" value="Hoa"/>
                            <core:CustomData key="reqFields" value="Hoa"/>
                            <core:CustomData key="entityInfo" value="{entitySet: 'ZWRK_C_HOA', entityType: 'ZWRK_C_HOAType'}"/>
                            <core:CustomData key="filterArray"
                                value="{filter:[
                                    {id: 'idCategory', key: 'category', value: 'Category'},
                                    {id: 'idInitDept', key: 'dept', value: 'InitiatinDept'}
                                ]}"/>
                            <core:CustomData key="mode" value="SingleSelectMaster"/>				
                        </customData>
                        <suggestionItems>
                            <core:Item key="{Hoa}" text="{Hoa}"/>
                        </suggestionItems>
                    </Input>
                    <Input change="onDdoChange"
                        app:bindPath="Ddo"
                        selectedKey="{Ddo}"
                        required="{= ${oControlModel>/Ddo/mandatory}}"
                        showSuggestion="true"
                        showValueHelp="true"
                        suggest="handleSuggest"
                        valueHelpRequest="handleValueHelp"
                        editable="{= ${oControlModel>/Ddo/display} &amp;&amp; ${detailView>/bEditable} &amp;&amp; (${detailView>/SubmitBtnVisibility} === 'X' ? true: false)}"
                        valueState="{oControlModel>/Ddo/valueState}" 
                        valueStateText="{oControlModel>/Ddo/valueStateText}" 
                        maxLength="{oControlModel>/Ddo/maxLength}" 
                        type="{oControlModel>/Ddo/type}"
                        suggestionItems="{/ZWRK_C_DDO}"
                        tooltip="{Ddo}"
                        id="Ddo">
                        <customData>
                            <core:CustomData key="key" value="fistl"/>
                            <core:CustomData key="text" value="fistl"/>
                            <core:CustomData key="reqfields" value="fistl"/>
                            <core:CustomData key="entityInfo" value="{entitySet: 'ZWRK_C_DDO', entityType: 'ZWRK_C_DDOType'}"/>
                            <core:CustomData key="filterArray"
                                value="{filter:[
                                    {id: 'idExecDept', key: 'fictr', value: 'ExecutingDept'}
                                ]}"/>
                            <core:CustomData key="mode" value="SingleSelectMaster"/>				
                        </customData>
                        <suggestionItems>
                            <core:Item text="{fistl}" key="{fistl}" />
                        </suggestionItems>
                    </Input>
                    <Input change="onDdoShareChange"
                        value="{Zshare}" 
                        editable="{= ${oControlModel>/Zshare/display} &amp;&amp; ${detailView>/bEditable} &amp;&amp; (${detailView>/SubmitBtnVisibility} === 'X' ? true: false)}"
                        valueState="{= ${oControlModel>/Zshare/valueState}}" 
                        valueStateText="{= ${oControlModel>/Zshare/valueStateText}}" 
                        maxLength="{oControlModel>/Zshare/maxLength}" 
                        type="{oControlModel>/Zshare/type}"
                        textAlign="Right"
                        tooltip="{Zshare}"/>
                    <Input change="onDdoChange"
                        value="{RefNumber}" 
                        visible="false"
                        editable="{= ${oControlModel>/RefNumber/display} &amp;&amp; ${detailView>/bEditable} &amp;&amp; (${detailView>/SubmitBtnVisibility} === 'X' ? true: false)}"
                        liveChange="onFieldLiveChange"
                        valueState="{= ${oControlModel>/RefNumber/valueState}}" 
                        valueStateText="{= ${oControlModel>/RefNumber/valueStateText}}" 
                        maxLength="{oControlModel>/RefNumber/maxLength}" 
                        type="{oControlModel>/RefNumber/type}"
                        textAlign="Right"
                        tooltip="{RefNumber}"/>
                    <DatePicker 
                        id="ValidFrom" 
                        app:bindPath="ValidFrom" 
                        value = "{path:'ValidFrom', type:'sap.ui.model.type.Date', formatOptions: { style: 'medium', strictParsing: true, UTC: true}}" 
                        change="onDdoChange" 
                        editable="{= ${detailView>/bEditable} &amp;&amp; (${detailView>/SubmitBtnVisibility} === 'X' ? true: false)}"/>
                    <DatePicker 
                        id="ValidTo" 
                        app:bindPath="ValidTo" 
                        value = "{path:'ValidTo', type:'sap.ui.model.type.Date', formatOptions: { style: 'medium', strictParsing: true, UTC: true}}" 
                        change="onDdoChange" 
                        editable="{= ${detailView>/bEditable} &amp;&amp; (${detailView>/SubmitBtnVisibility} === 'X' ? true: false)}"/>
                    <Button icon="sap-icon://delete" tooltip="{i18n>tooltip.delFromTable}" type="Transparent" press="onDeleteDDO" visible="{= ${detailView>/bEditable} &amp;&amp; (${detailView>/SubmitBtnVisibility} === 'X' ? true: false)}"/>
                </cells> 
            </ColumnListItem>
        </items>
    </Table>
</core:FragmentDefinition>